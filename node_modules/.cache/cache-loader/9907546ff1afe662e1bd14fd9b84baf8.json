{"remainingRequest":"/Users/chemingqiang/Desktop/Blog/node_modules/thread-loader/dist/cjs.js!/Users/chemingqiang/Desktop/Blog/node_modules/babel-loader/lib/index.js!/Users/chemingqiang/Desktop/Blog/node_modules/core-js/modules/es6.regexp.split.js","dependencies":[{"path":"/Users/chemingqiang/Desktop/Blog/node_modules/core-js/modules/es6.regexp.split.js","mtime":499162500000},{"path":"/Users/chemingqiang/Desktop/Blog/babel.config.js","mtime":1647066144493},{"path":"/Users/chemingqiang/Desktop/Blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chemingqiang/Desktop/Blog/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chemingqiang/Desktop/Blog/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zbGljZS5qcyI7Cgp2YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTsKCnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpOwoKdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTsKCnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpOwoKdmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7Cgp2YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpOwoKdmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpOwoKdmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTsKCnZhciAkbWluID0gTWF0aC5taW47CnZhciAkcHVzaCA9IFtdLnB1c2g7CnZhciAkU1BMSVQgPSAnc3BsaXQnOwp2YXIgTEVOR1RIID0gJ2xlbmd0aCc7CnZhciBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7CnZhciBNQVhfVUlOVDMyID0gMHhmZmZmZmZmZjsgLy8gYmFiZWwtbWluaWZ5IHRyYW5zcGlsZXMgUmVnRXhwKCd4JywgJ3knKSAtPiAveC95IGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3IKCnZhciBTVVBQT1JUU19ZID0gIWZhaWxzKGZ1bmN0aW9uICgpIHsKICBSZWdFeHAoTUFYX1VJTlQzMiwgJ3knKTsKfSk7IC8vIEBAc3BsaXQgbG9naWMKCnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc3BsaXQnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgU1BMSVQsICRzcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7CiAgdmFyIGludGVybmFsU3BsaXQ7CgogIGlmICgnYWJiYydbJFNQTElUXSgvKGIpKi8pWzFdID09ICdjJyB8fCAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHwgJ2FiJ1skU1BMSVRdKC8oPzphYikqLylbTEVOR1RIXSAhPSAyIHx8ICcuJ1skU1BMSVRdKC8oLj8pKC4/KS8pW0xFTkdUSF0gIT0gNCB8fCAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8ICcnWyRTUExJVF0oLy4/LylbTEVOR1RIXSkgewogICAgLy8gYmFzZWQgb24gZXM1LXNoaW0gaW1wbGVtZW50YXRpb24sIG5lZWQgdG8gcmV3b3JrIGl0CiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gaW50ZXJuYWxTcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAgIHZhciBzdHJpbmcgPSBTdHJpbmcodGhpcyk7CiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCkgcmV0dXJuIFtdOyAvLyBJZiBgc2VwYXJhdG9yYCBpcyBub3QgYSByZWdleCwgdXNlIG5hdGl2ZSBzcGxpdAoKICAgICAgaWYgKCFpc1JlZ0V4cChzZXBhcmF0b3IpKSByZXR1cm4gJHNwbGl0LmNhbGwoc3RyaW5nLCBzZXBhcmF0b3IsIGxpbWl0KTsKICAgICAgdmFyIG91dHB1dCA9IFtdOwogICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgKyAoc2VwYXJhdG9yLm11bHRpbGluZSA/ICdtJyA6ICcnKSArIChzZXBhcmF0b3IudW5pY29kZSA/ICd1JyA6ICcnKSArIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpOwogICAgICB2YXIgbGFzdExhc3RJbmRleCA9IDA7CiAgICAgIHZhciBzcGxpdExpbWl0ID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IE1BWF9VSU5UMzIgOiBsaW1pdCA+Pj4gMDsgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHkKCiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7CiAgICAgIHZhciBtYXRjaCwgbGFzdEluZGV4LCBsYXN0TGVuZ3RoOwoKICAgICAgd2hpbGUgKG1hdGNoID0gcmVnZXhwRXhlYy5jYWxsKHNlcGFyYXRvckNvcHksIHN0cmluZykpIHsKICAgICAgICBsYXN0SW5kZXggPSBzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdOwoKICAgICAgICBpZiAobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCkgewogICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7CiAgICAgICAgICBpZiAobWF0Y2hbTEVOR1RIXSA+IDEgJiYgbWF0Y2guaW5kZXggPCBzdHJpbmdbTEVOR1RIXSkgJHB1c2guYXBwbHkob3V0cHV0LCBtYXRjaC5zbGljZSgxKSk7CiAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF1bTEVOR1RIXTsKICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7CiAgICAgICAgICBpZiAob3V0cHV0W0xFTkdUSF0gPj0gc3BsaXRMaW1pdCkgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICBpZiAoc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSA9PT0gbWF0Y2guaW5kZXgpIHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0rKzsgLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcAogICAgICB9CgogICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pIHsKICAgICAgICBpZiAobGFzdExlbmd0aCB8fCAhc2VwYXJhdG9yQ29weS50ZXN0KCcnKSkgb3V0cHV0LnB1c2goJycpOwogICAgICB9IGVsc2Ugb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTsKCiAgICAgIHJldHVybiBvdXRwdXRbTEVOR1RIXSA+IHNwbGl0TGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgc3BsaXRMaW1pdCkgOiBvdXRwdXQ7CiAgICB9OyAvLyBDaGFrcmEsIFY4CgogIH0gZWxzZSBpZiAoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKSB7CiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gaW50ZXJuYWxTcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAgIHJldHVybiBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCA/IFtdIDogJHNwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7CiAgICB9OwogIH0gZWxzZSB7CiAgICBpbnRlcm5hbFNwbGl0ID0gJHNwbGl0OwogIH0KCiAgcmV0dXJuIFsvLyBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdGAgbWV0aG9kCiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5zcGxpdAogIGZ1bmN0aW9uIHNwbGl0KHNlcGFyYXRvciwgbGltaXQpIHsKICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTsKICAgIHZhciBzcGxpdHRlciA9IHNlcGFyYXRvciA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZXBhcmF0b3JbU1BMSVRdOwogICAgcmV0dXJuIHNwbGl0dGVyICE9PSB1bmRlZmluZWQgPyBzcGxpdHRlci5jYWxsKHNlcGFyYXRvciwgTywgbGltaXQpIDogaW50ZXJuYWxTcGxpdC5jYWxsKFN0cmluZyhPKSwgc2VwYXJhdG9yLCBsaW1pdCk7CiAgfSwgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZAogIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdAogIC8vCiAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydAogIC8vIHRoZSAneScgZmxhZy4KICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkgewogICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSAkc3BsaXQpOwogICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlOwogICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTsKICAgIHZhciBTID0gU3RyaW5nKHRoaXMpOwogICAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IocngsIFJlZ0V4cCk7CiAgICB2YXIgdW5pY29kZU1hdGNoaW5nID0gcngudW5pY29kZTsKICAgIHZhciBmbGFncyA9IChyeC5pZ25vcmVDYXNlID8gJ2knIDogJycpICsgKHJ4Lm11bHRpbGluZSA/ICdtJyA6ICcnKSArIChyeC51bmljb2RlID8gJ3UnIDogJycpICsgKFNVUFBPUlRTX1kgPyAneScgOiAnZycpOyAvLyBeKD8gKyByeCArICkgaXMgbmVlZGVkLCBpbiBjb21iaW5hdGlvbiB3aXRoIHNvbWUgUyBzbGljaW5nLCB0bwogICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLgoKICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFNVUFBPUlRTX1kgPyByeCA6ICdeKD86JyArIHJ4LnNvdXJjZSArICcpJywgZmxhZ3MpOwogICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7CiAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107CiAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTsKICAgIHZhciBwID0gMDsKICAgIHZhciBxID0gMDsKICAgIHZhciBBID0gW107CgogICAgd2hpbGUgKHEgPCBTLmxlbmd0aCkgewogICAgICBzcGxpdHRlci5sYXN0SW5kZXggPSBTVVBQT1JUU19ZID8gcSA6IDA7CiAgICAgIHZhciB6ID0gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFNVUFBPUlRTX1kgPyBTIDogUy5zbGljZShxKSk7CiAgICAgIHZhciBlOwoKICAgICAgaWYgKHogPT09IG51bGwgfHwgKGUgPSAkbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChTVVBQT1JUU19ZID8gMCA6IHEpKSwgUy5sZW5ndGgpKSA9PT0gcCkgewogICAgICAgIHEgPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgcSwgdW5pY29kZU1hdGNoaW5nKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBBLnB1c2goUy5zbGljZShwLCBxKSk7CiAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBOwoKICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykgewogICAgICAgICAgQS5wdXNoKHpbaV0pOwogICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBOwogICAgICAgIH0KCiAgICAgICAgcSA9IHAgPSBlOwogICAgICB9CiAgICB9CgogICAgQS5wdXNoKFMuc2xpY2UocCkpOwogICAgcmV0dXJuIEE7CiAgfV07Cn0pOw=="},null]}